"""Add many-to-many relationship between UserPayment and User for sellers2

Revision ID: a3f507143e69
Revises: a4a1539e59ad
Create Date: 2024-08-14 09:35:12.080883

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a3f507143e69'
down_revision = 'a4a1539e59ad'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_seller_association',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['user_payments.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('payment_id', 'seller_id')
    )
    with op.batch_alter_table('user_payments', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_payments_seller_id', type_='foreignkey')
        batch_op.drop_column('seller_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_payments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seller_id', sa.INTEGER(), nullable=False))
        batch_op.create_foreign_key('fk_user_payments_seller_id', 'users', ['seller_id'], ['id'])

    op.drop_table('payment_seller_association')
    # ### end Alembic commands ###
